{"version":3,"sources":["components/Profile/ProfileForm.module.css","components/Layout/MainNavigation.module.css","components/Profile/UserProfile.module.css","components/StartingPage/StartingPageContent.module.css","Store/auth-context.js","components/Layout/MainNavigation.js","components/Layout/Layout.js","components/Profile/ProfileForm.js","components/Profile/UserProfile.js","components/Auth/AuthForm.js","pages/AuthPage.js","components/StartingPage/StartingPageContent.js","pages/HomePage.js","App.js","index.js","components/Auth/AuthForm.module.css"],"names":["module","exports","logoutTimer","AuthContext","React","createContext","token","isLoggedIn","login","logout","calcRemainingTime","expirationTime","currentTime","Date","getTime","AuthContextProvider","props","initialToken","tokenData","localStorage","getItem","storedExpirationDate","removeItem","retriveStoredToken","useState","setToken","userIsLoggedIn","logoutHandler","useCallback","clearTimeout","useEffect","setTimeout","duration","contextValue","setItem","remainingTime","Provider","value","children","MainNavigation","authCtx","useContext","className","classes","header","to","logo","onClick","Layout","ProfileForm","history","useHistory","newPasswordInputRef","useRef","form","onSubmit","event","preventDefault","newPassword","current","fetch","method","body","JSON","stringify","idToken","password","returnSecureToken","headers","then","res","replace","control","htmlFor","type","id","minLength","ref","action","UserProfile","profile","AuthForm","emailInputRef","passwordInputref","isLogin","setIsLogin","isLoading","setIsLoading","auth","url","enteredEmail","enteredPassword","email","ok","json","data","Error","expiresIn","toISOString","catch","err","alert","message","required","actions","toggle","prevState","AuthPage","StartingPageContent","starting","HomePage","App","path","exact","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.953b73a9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ProfileForm_form__2c7Yl\",\"control\":\"ProfileForm_control__VKQGW\",\"action\":\"ProfileForm_action__-TjRV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__32GUL\",\"logo\":\"MainNavigation_logo__2oXgp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"UserProfile_profile__2efnR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"starting\":\"StartingPageContent_starting__1OPY5\"};","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { useCallback, useEffect } from \"react\";\r\n\r\nlet logoutTimer;\r\nconst AuthContext = React.createContext({\r\n  token: \"\",\r\n  isLoggedIn: false,\r\n  login: (token) => {},\r\n  logout: () => {},\r\n});\r\n\r\nconst calcRemainingTime = (expirationTime) => {\r\n  const currentTime = new Date().getTime();\r\n  const adjExpirationTime = new Date(expirationTime).getTime();\r\n  const remainingDuration = adjExpirationTime - currentTime;\r\n  return remainingDuration;\r\n};\r\n\r\nconst retriveStoredToken = () => {\r\n  const storedToken = localStorage.getItem(\"token\");\r\n  const storedExpirationDate = localStorage.getItem(\"expirationTime\");\r\n\r\n  const remainingTime = calcRemainingTime(storedExpirationDate);\r\n\r\n  if (remainingTime <= 60000) {\r\n    localStorage.removeItem(\"token\");\r\n    localStorage.removeItem(\"expirationTime\");\r\n\r\n    return null;\r\n  }\r\n};\r\n\r\nexport const AuthContextProvider = (props) => {\r\n  const tokenData = retriveStoredToken();\r\n  let initialToken;\r\n  if (tokenData) {\r\n    initialToken = tokenData.token;\r\n  }\r\n  const [token, setToken] = useState(initialToken);\r\n\r\n  const userIsLoggedIn = !!token;\r\n\r\n  const loginHandler = (token, expirationTime) => {\r\n    setToken(token);\r\n    localStorage.setItem(\"token\", token);\r\n    localStorage.setItem(\"expirationTime\", expirationTime);\r\n\r\n    const remainingTime = calcRemainingTime(expirationTime);\r\n\r\n    logoutTimer = setTimeout(logoutHandler, remainingTime);\r\n  };\r\n\r\n  const logoutHandler = useCallback(() => {\r\n    setToken(null);\r\n    localStorage.removeItem(\"token\");\r\n    localStorage.removeItem(\"expirationTime\");\r\n\r\n    if (logoutTimer) {\r\n      clearTimeout(logoutTimer);\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (tokenData) {\r\n      logoutTimer = setTimeout(logoutHandler, tokenData.duration);\r\n    }\r\n  }, [tokenData, logoutHandler]);\r\n\r\n  const contextValue = {\r\n    token: token,\r\n    isLoggedIn: userIsLoggedIn,\r\n    login: loginHandler,\r\n    logout: logoutHandler,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={contextValue}>\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\nexport default AuthContext;\r\n","import { Link } from \"react-router-dom\";\nimport { useContext } from \"react\";\nimport AuthContext from \"../../Store/auth-context\";\n\nimport classes from \"./MainNavigation.module.css\";\n\nconst MainNavigation = () => {\n  const authCtx = useContext(AuthContext);\n  const isLoggedIn = authCtx.isLoggedIn;\n\n  const logoutHandler=()=>{\n    authCtx.logout()\n  }\n\n  return (\n    <header className={classes.header}>\n      <Link to=\"/\">\n        <div className={classes.logo}>React Auth</div>\n      </Link>\n      <nav>\n        <ul>\n          {!isLoggedIn && (\n            <li>\n              <Link to=\"/auth\">Login</Link>\n            </li>\n          )}\n          {isLoggedIn && (\n            <li>\n              <Link to=\"/profile\">Profile</Link>\n            </li>\n          )}\n          {isLoggedIn && (\n            <li>\n              <button onClick={logoutHandler}>Logout</button>\n            </li>\n          )}\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default MainNavigation;\n","import { Fragment } from 'react';\n\nimport MainNavigation from './MainNavigation';\n\nconst Layout = (props) => {\n  return (\n    <Fragment>\n      <MainNavigation />\n      <main>{props.children}</main>\n    </Fragment>\n  );\n};\n\nexport default Layout;\n","import { useRef } from \"react\";\nimport { useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport AuthContext from \"../../Store/auth-context\";\nimport classes from \"./ProfileForm.module.css\";\n\nconst ProfileForm = () => {\n  const history = useHistory();\n  const newPasswordInputRef = useRef();\n  const authCtx = useContext(AuthContext);\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    const newPassword = newPasswordInputRef.current.value;\n\n    fetch(\n      \"https://identitytoolkit.googleapis.com/v1/accounts:update?key=AIzaSyARnbRCHouLQUw0XchsZtT2BUXjM_IJsQc\",\n      {\n        method: \"POST\",\n        body: JSON.stringify({\n          idToken: authCtx.token,\n          password: newPassword,\n          returnSecureToken: false,\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    ).then((res) => {\n      history.replace(\"/\");\n    });\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitHandler}>\n      <div className={classes.control}>\n        <label htmlFor=\"new-password\">New Password</label>\n        <input\n          type=\"password\"\n          id=\"new-password\"\n          minLength=\"7\"\n          ref={newPasswordInputRef}\n        />\n      </div>\n      <div className={classes.action}>\n        <button>Change Password</button>\n      </div>\n    </form>\n  );\n};\n\nexport default ProfileForm;\n","import ProfileForm from './ProfileForm';\nimport classes from './UserProfile.module.css';\n\nconst UserProfile = () => {\n  return (\n    <section className={classes.profile}>\n      <h1>Your User Profile</h1>\n      <ProfileForm />\n    </section>\n  );\n};\n\nexport default UserProfile;\n","import { useState, useRef } from \"react\";\nimport { useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport AuthContext from \"../../Store/auth-context\";\n\nimport classes from \"./AuthForm.module.css\";\n\nconst AuthForm = () => {\n  const emailInputRef = useRef();\n  const passwordInputref = useRef();\n  const [isLogin, setIsLogin] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n  const history = useHistory();\n\n  const authCtx = useContext(AuthContext);\n\n  const switchAuthModeHandler = () => {\n    setIsLogin((prevState) => !prevState);\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    const enteredEmail = emailInputRef.current.value;\n    const enteredPassword = passwordInputref.current.value;\n\n    setIsLoading(true);\n    let url;\n    if (isLogin) {\n      url =\n        \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyARnbRCHouLQUw0XchsZtT2BUXjM_IJsQc\";\n    } else {\n      url =\n        \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyARnbRCHouLQUw0XchsZtT2BUXjM_IJsQc\";\n    }\n    fetch(url, {\n      method: \"POST\",\n      body: JSON.stringify({\n        email: enteredEmail,\n        password: enteredPassword,\n        returnSecureToken: true,\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => {\n        setIsLoading(false);\n        if (res.ok) {\n          return res.json();\n        } else {\n          return res.json().then((data) => {\n            let errorMessage = \"Authentication failed\";\n            // if (data && data.error && data.error.message) {\n            //   errorMessage = data.error.message;\n            // }\n            throw new Error(errorMessage);\n          });\n        }\n      })\n      .then((data) => {\n        const expirationTime = new Date(\n          new Date().getTime() + +data.expiresIn * 1000\n        );\n        authCtx.login(data.idToken, expirationTime.toISOString());\n        history.replace(\"/\");\n      })\n      .catch((err) => {\n        alert(err.message);\n      });\n  };\n\n  return (\n    <section className={classes.auth}>\n      <h1>{isLogin ? \"Login\" : \"Sign Up\"}</h1>\n      <form onSubmit={submitHandler}>\n        <div className={classes.control}>\n          <label htmlFor=\"email\">Your Email</label>\n          <input type=\"email\" id=\"email\" required ref={emailInputRef} />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"password\">Your Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            required\n            ref={passwordInputref}\n          />\n        </div>\n        <div className={classes.actions}>\n          {!isLoading && (\n            <button>{isLogin ? \"Login\" : \"Create Account\"}</button>\n          )}\n          {isLoading && <p>Loading...</p>}\n          <button\n            type=\"button\"\n            className={classes.toggle}\n            onClick={switchAuthModeHandler}\n          >\n            {isLogin ? \"Create new account\" : \"Login with existing account\"}\n          </button>\n        </div>\n      </form>\n    </section>\n  );\n};\n\nexport default AuthForm;\n","import AuthForm from '../components/Auth/AuthForm';\n\nconst AuthPage = () => {\n  return <AuthForm />;\n};\n\nexport default AuthPage;\n","import classes from './StartingPageContent.module.css';\n\nconst StartingPageContent = () => {\n  return (\n    <section className={classes.starting}>\n      <h1>Welcome on Board!</h1>\n    </section>\n  );\n};\n\nexport default StartingPageContent;\n","import StartingPageContent from '../components/StartingPage/StartingPageContent';\n\nconst HomePage = () => {\n  return <StartingPageContent />;\n};\n\nexport default HomePage;\n","import { Switch, Route } from \"react-router-dom\";\nimport { useContext } from \"react\";\n\nimport Layout from \"./components/Layout/Layout\";\nimport UserProfile from \"./components/Profile/UserProfile\";\nimport AuthPage from \"./pages/AuthPage\";\nimport HomePage from \"./pages/HomePage\";\nimport AuthContext from \"./Store/auth-context\";\nimport { Redirect } from \"react-router-dom\";\n\nfunction App() {\n  const authCtx = useContext(AuthContext);\n  return (\n    <Layout>\n      <Switch>\n        <Route path=\"/\" exact>\n          <HomePage />\n        </Route>\n        {!authCtx.isLoggedIn && (\n          <Route path=\"/auth\">\n            <AuthPage />\n          </Route>\n        )}\n        <Route path=\"/profile\">\n          {authCtx.isLoggedIn && <UserProfile />}\n          {!authCtx.isLoggedIn && <Redirect to=\"/auth\" />}\n        </Route>\n\n        <Route path=\"*\">\n          <Redirect to=\"/\" />\n        </Route>\n      </Switch>\n    </Layout>\n  );\n}\n\nexport default App;\n","import ReactDOM from \"react-dom/client\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport { AuthContextProvider } from \"./Store/auth-context\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <AuthContextProvider>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </AuthContextProvider>\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"auth\":\"AuthForm_auth__1zLFQ\",\"control\":\"AuthForm_control__2xV3J\",\"actions\":\"AuthForm_actions__1k1Cd\",\"toggle\":\"AuthForm_toggle__2kLSS\"};"],"sourceRoot":""}